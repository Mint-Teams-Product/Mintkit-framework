export const pipe=function(){const t=arguments,e=t.length;for(let r=0;r<e;r++)if(typeof t[r]!="function")throw new TypeError(`pipe: Argument at index ${r} is not a function`);return function(r){let n=r;for(let s=0;s<e;s++)try{n=t[s](n)}catch(i){throw console.error(`pipe: Error in function at index ${s}:`,i),i}return n}},compose=function(){const t=arguments,e=t.length;for(let r=0;r<e;r++)if(typeof t[r]!="function")throw new TypeError(`compose: Argument at index ${r} is not a function`);return function(r){let n=r;for(let s=e-1;s>=0;s--)try{n=t[s](n)}catch(i){throw console.error(`compose: Error in function at index ${s}:`,i),i}return n}};const S=(()=>{if(typeof globalThis.structuredClone=="function")return e=>{try{return globalThis.structuredClone(e)}catch(r){return console.warn("structuredClone failed, falling back to custom clone.",r),t(e)}};const t=(e,r=new WeakMap)=>{if(Object(e)!==e||e instanceof Function)return e;if(r.has(e))return r.get(e);try{if(e instanceof Date)return new Date(e);if(e instanceof RegExp)return new RegExp(e.source,e.flags);if(e instanceof Map){const s=new Map;return r.set(e,s),e.forEach((i,u)=>s.set(t(u,r),t(i,r))),s}if(e instanceof Set){const s=new Set;return r.set(e,s),e.forEach(i=>s.add(t(i,r))),s}}catch(s){return console.error("Could not clone a specific object type, returning as is.",s),e}const n=Array.isArray(e)?[]:Object.create(Object.getPrototypeOf(e));r.set(e,n);for(const s of Reflect.ownKeys(e))n[s]=t(e[s],r);return n};return console.warn("Mintkit: `structuredClone` is not available. Using a custom fallback."),t})();function q(t,e,...r){if(!t||typeof t!="string")throw new Error("createElement: tag must be a non-empty string");const n=r.flat(1/0).filter(s=>s!=null&&s!==!1);return{tag:t,props:e||{},children:n,key:e?.key||null}}function D(t,e){return!t||!e?!1:typeof t=="string"||typeof t=="number"?typeof e=="string"||typeof e=="number":t.tag===e.tag&&t.key===e.key}function M(t,e,r){if(!t||!(t instanceof Element)){console.warn("updateProps: Invalid DOM element");return}e=e||{},r=r||{},Object.keys(e).forEach(n=>{if(!(n in r))if(n.startsWith("on")){const s=n.slice(2).toLowerCase();t.removeEventListener(s,e[n])}else n==="className"?t.className="":n==="style"&&typeof e[n]=="object"?Object.keys(e[n]).forEach(s=>{t.style[s]=""}):n!=="key"&&t.removeAttribute(n)}),Object.keys(r).forEach(n=>{const s=e[n],i=r[n];if(s!==i&&n!=="key")if(n.startsWith("on")&&typeof i=="function"){const u=n.slice(2).toLowerCase();s&&t.removeEventListener(u,s),t.addEventListener(u,i)}else n==="className"?t.className=i||"":n==="style"?typeof i=="object"?Object.assign(t.style,i):t.setAttribute("style",i):n==="value"&&(t.tagName==="INPUT"||t.tagName==="TEXTAREA")?t.value=i:n==="checked"&&t.tagName==="INPUT"?t.checked=!!i:t.setAttribute(n,i)})}function w(t){if(t==null||t===!1)return document.createTextNode("");if(typeof t=="string"||typeof t=="number")return document.createTextNode(String(t));if(Array.isArray(t)){const e=document.createDocumentFragment();return t.forEach(r=>{e.appendChild(w(r))}),e}if(!t.tag)return console.warn("createDomNode: Invalid vNode",t),document.createTextNode("");try{const e=document.createElement(t.tag);return M(e,{},t.props),t.children&&t.children.length>0&&t.children.forEach(r=>{const n=w(r);n&&e.appendChild(n)}),e}catch(e){return console.error("createDomNode: Error creating element:",e),document.createTextNode(`[Error: ${t.tag}]`)}}function R(t,e,r,n=0){if(!t||!(t instanceof Element)){console.warn("diff: Invalid parent element");return}try{if(r)if(e){if(typeof e!=typeof r||typeof e=="string"&&e!==r||typeof e=="number"&&e!==r||!D(e,r)){const s=w(e),i=t.childNodes[n];s&&i&&t.replaceChild(s,i)}else if(e.tag){const s=t.childNodes[n];if(s){M(s,r.props,e.props);const i=e.children?e.children.length:0,u=r.children?r.children.length:0,o=Math.max(i,u);for(let a=0;a<o;a++)R(s,e.children?e.children[a]:null,r.children?r.children[a]:null,a)}}}else{const s=t.childNodes[n];s&&t.removeChild(s)}else{const s=w(e);s&&t.appendChild(s)}}catch(s){console.error("diff: Error during diffing:",s)}}export function createState(t){let e=t,r=[],n=null,s=null,i=!1,u=[];const o=()=>{if(!i){i=!0;try{const a=e;for(let l=0,d=r.length;l<d;l++)if(typeof r[l]=="function")try{r[l](a)}catch(g){console.error("createState: Error in subscriber:",g)}if(s&&n!==null&&e&&typeof e=="object"&&e.vdom)try{R(s,e.vdom,n),n=S(e.vdom)}catch(l){console.error("createState: Error during DOM diffing:",l)}}finally{if(i=!1,u.length>0){const a=u.shift();a&&(e=a,setTimeout(o,0))}}}};return{get:function(){return e},set:function(a){const l=typeof a=="function"?a(e):a;if(l!==e){if(i){u.push(l);return}e=l,setTimeout(o,0)}},subscribe:function(a,l){if(typeof a=="function")return r.push(a),()=>{const d=r.indexOf(a);d>-1&&r.splice(d,1)};if(l&&l instanceof HTMLElement&&(s=l,e&&typeof e=="object"&&e.vdom))try{n=S(e.vdom),s.innerHTML="";const d=w(e.vdom);d&&s.appendChild(d)}catch(d){console.error("createState: Error mounting initial DOM:",d)}},createElement:q,getSubscriberCount:()=>r.length,hasSubscribers:()=>r.length>0,clear:()=>{r=[],n=null,s=null,u=[]}}}function F(t){const r=[/expression\s*\(/i,/url\s*\(\s*['"]?javascript:/i,/@import\s+['"]?javascript:/i,/-moz-binding\s*:/i,/vbscript\s*:/i,/data\s*:\s*text\/html/i].find(n=>n.test(t));if(r){console.warn("isUnsafeCSS: The following pattern triggered the security check:",r.toString());const n=t.match(r);return n&&console.warn("isUnsafeCSS: The matched text was:",`"${n[0]}"`),!0}return!1}function $(t){const e=/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,r=/\son\w+\s*=\s*["'][^"']*["']/gi,n=/javascript\s*:/gi;return t.replace(e,"").replace(r,"").replace(n,"")}function C(t,e,r){switch(r){case"append":t.appendChild(e);break;case"prepend":t.insertBefore(e,t.firstChild);break;case"replace":default:t.textContent="",t.appendChild(e);break}}function I(t){let e=2166136261;for(let r=0;r<t.length;r++)e^=t.charCodeAt(r),e+=(e<<1)+(e<<4)+(e<<7)+(e<<8)+(e<<24);return("0000000"+(e>>>0).toString(16)).substr(-8)}const H=new WeakMap,T=new Map;export function injectCSS(t,e={}){const{nonce:r=null,media:n=null,priority:s="normal",validate:i=!0,onError:u=console.error}=e;if(!t||typeof t!="string"){const a=new Error("injectCSS: Invalid CSS string provided");return u(a),null}if(i&&F(t)){const a=new Error("injectCSS: Potentially unsafe CSS detected");throw u(a),a}const o=I(t+(r||"")+(n||""));if(T.has(o))return T.get(o);try{const a=document.createElement("style");a.textContent=t,a.setAttribute("data-css-hash",o),a.setAttribute("data-injected","true"),r&&a.setAttribute("nonce",r),n&&a.setAttribute("media",n);const l=s==="high"?"afterbegin":"beforeend";return requestAnimationFrame(()=>{document.head.insertAdjacentElement(l,a)}),a.removeCSS=()=>{try{a.parentNode&&a.parentNode.removeChild(a),H.delete(a),T.delete(o),a.textContent="",a.removeCSS=null}catch(d){u(d)}},H.set(a,o),T.set(o,a),a}catch(a){return u(new Error(`injectCSS: Failed to inject CSS - ${a.message}`)),null}}export function injectHTML(t,e,r={}){const{sanitize:n=!0,allowScripts:s=!1,mode:i="replace",onError:u=console.error,validate:o=!0}=r;if(!t||typeof t!="string"||t.trim()===""){const a=new Error("injectHTML: targetSelector must be a non-empty string");throw u(a),a}e==null&&(e="");try{const a=document.querySelector(t);if(!a)throw new Error(`injectHTML: No element matches selector: ${t}`);if(e instanceof DocumentFragment||e instanceof Node||e instanceof NodeList||e instanceof HTMLCollection){const l=document.createDocumentFragment();return e instanceof NodeList||e instanceof HTMLCollection?Array.from(e).forEach(d=>l.appendChild(d.cloneNode(!0))):l.appendChild(e.cloneNode(!0)),C(a,l,i),a}if(typeof e=="string"){let l=e;if(n&&(l=$(l)),!s&&l.includes("<script")){if(o)throw new Error("injectHTML: Script tags detected and not allowed");console.warn("injectHTML: Script tags detected and removed"),l=l.replace(/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,"")}const g=new DOMParser().parseFromString(`<div>${l}</div>`,"text/html"),p=g.querySelector("parsererror");if(p)throw new Error(`injectHTML: HTML parsing failed - ${p.textContent}`);const y=document.createDocumentFragment(),v=g.body.firstChild;for(;v.firstChild;)y.appendChild(v.firstChild);return C(a,y,i),a}throw new Error("injectHTML: htmlContent must be a string, Node, or DocumentFragment")}catch(a){const l=new Error(`injectHTML: ${a.message}`);throw u(l),l}}export function clearInjectionCache(){T.clear()}export function getInjectionStats(){return{hashCacheSize:T.size,memoryUsage:performance.memory?{used:performance.memory.usedJSHeapSize,total:performance.memory.totalJSHeapSize,limit:performance.memory.jsHeapSizeLimit}:"not available"}}export function injectTitle(t){if(!t||typeof t!="string"){console.warn("injectTitle: Invalid title string provided");return}try{let e=document.head;e||(e=document.createElement("head"),document.documentElement.appendChild(e));const r=e.querySelector("title");r&&r.remove();const n=t.trim();(!n.startsWith("<title>")||!n.endsWith("</title>"))&&console.warn("injectTitle: Title string should be wrapped in <title> tags"),e.insertAdjacentHTML("beforeend",n);const s=e.querySelector("title");s&&console.debug("injectTitle: Title updated to:",s.textContent)}catch(e){console.error("injectTitle: Error injecting title:",e)}}export async function get(t,e){if(!t||typeof t!="string")throw new Error("get: url must be a string");const r=t.toLowerCase();if(r.endsWith(".css"))return document.querySelector(`link[href="${t}"]`)?void 0:new Promise((n,s)=>{const i=document.createElement("link");i.rel="stylesheet",i.href=t,i.onload=()=>n(i),i.onerror=u=>s(u),document.head.appendChild(i)});if(r.endsWith(".html")||r.endsWith(".htm")){const n=await fetch(t);if(!n.ok)throw new Error(`get: HTTP ${n.status}`);const s=await n.text(),i=e||"body",u=document.querySelector(i);if(u)return u.insertAdjacentHTML("beforeend",s),u;throw new Error(`get: No element matches selector: ${i}`)}else throw new Error("get: Only .css, .html, .htm files are supported")}export const include=get;export async function processIncludes(t=document){const e=/@include\(['"]([^'"]+)['"]\)/g,r=document.createTreeWalker(t.body||t,NodeFilter.SHOW_TEXT,null,!1);let n;const s=[];for(;n=r.nextNode();){let i,u=n.nodeValue,o=!1;for(;i=e.exec(u);){const a=i[1];s.push((async()=>{if(a.endsWith(".css"))await get(a);else if(a.endsWith(".html")||a.endsWith(".htm")){const l=await fetch(a);if(l.ok){const d=await l.text();n.nodeValue=n.nodeValue.replace(i[0],d)}}})()),o=!0}}await Promise.all(s)}export const AdjustHook=(t={})=>{const e={interval:t.interval||1e3,endpoint:t.endpoint||"/reload",onReload:t.onReload||(()=>location.reload()),onError:t.onError||(f=>console.warn("AdjustHook: Reload check failed:",f)),onMetricsUpdate:t.onMetricsUpdate||null,enabled:t.enabled!==!1,performanceMonitoring:t.performanceMonitoring||!1,detailedLogging:t.detailedLogging||!1,maxRetries:t.maxRetries||3,retryDelay:t.retryDelay||2e3,healthCheckInterval:t.healthCheckInterval||3e4,metricsReportInterval:t.metricsReportInterval||10};if(!e.enabled)return console.debug("AdjustHook: Hot reload disabled"),{stop:()=>{},getStats:()=>({}),getMetrics:()=>({})};let r=null,n=null,s=!1,i=0,u=Date.now();const o={requests:{total:0,successful:0,failed:0,retries:0},performance:{totalTime:0,avgResponseTime:0,minResponseTime:1/0,maxResponseTime:0,lastResponseTime:0,responseTimeHistory:[]},errors:{total:0,consecutive:0,maxConsecutive:0,types:{},lastError:null,lastErrorTime:null},health:{uptime:0,isHealthy:!0,lastSuccessTime:Date.now(),lastFailureTime:null,successRate:100},server:{memoryUsage:0,cpuUsage:0,uptime:0,version:null,lastUpdate:null}},a=f=>{const c=o.performance;c.totalTime+=f,c.lastResponseTime=f,c.minResponseTime=Math.min(c.minResponseTime,f),c.maxResponseTime=Math.max(c.maxResponseTime,f),c.avgResponseTime=c.totalTime/o.requests.total,c.responseTimeHistory.push(f),c.responseTimeHistory.length>50&&c.responseTimeHistory.shift()},l=f=>{o.errors.total++,o.errors.consecutive++,o.errors.maxConsecutive=Math.max(o.errors.maxConsecutive,o.errors.consecutive),o.errors.lastError=f.message||f.toString(),o.errors.lastErrorTime=Date.now();const c=f.name||"UnknownError";o.errors.types[c]=(o.errors.types[c]||0)+1,o.health.isHealthy=o.errors.consecutive<5,o.health.lastFailureTime=Date.now()},d=()=>{o.errors.consecutive=0,o.health.isHealthy=!0,o.health.lastSuccessTime=Date.now()},g=()=>{o.health.uptime=Date.now()-u;const f=o.requests.successful+o.requests.failed;o.health.successRate=f>0?o.requests.successful/f*100:100},p=f=>{if(o.performance.responseTimeHistory.length===0)return 0;const c=[...o.performance.responseTimeHistory].sort((h,x)=>h-x),m=Math.ceil(f/100*c.length)-1;return c[Math.max(0,m)]},y=()=>{if(!e.performanceMonitoring)return;const f={timestamp:new Date().toISOString(),uptime:o.health.uptime,requests:o.requests,performance:{...o.performance,p50:p(50),p95:p(95),p99:p(99)},errors:o.errors,health:o.health,server:o.server};e.detailedLogging?(console.group("AdjustHook Detailed Metrics"),console.table({"Total Requests":o.requests.total,"Success Rate":`${o.health.successRate.toFixed(2)}%`,"Avg Response":`${o.performance.avgResponseTime.toFixed(2)}ms`,"P95 Response":`${p(95).toFixed(2)}ms`,"Consecutive Errors":o.errors.consecutive,"Health Status":o.health.isHealthy?"Healthy":"Degraded"}),console.groupEnd()):console.log(`AdjustHook: ${o.requests.total} req, ${o.health.successRate.toFixed(1)}% success, ${o.performance.avgResponseTime.toFixed(1)}ms avg, ${o.errors.consecutive} consecutive errors`),e.onMetricsUpdate&&e.onMetricsUpdate(f)},v=()=>{g(),e.detailedLogging&&console.log(`AdjustHook Health Check: ${o.health.isHealthy?"Healthy":"Degraded"}`)},k=async(f,c=e.maxRetries)=>{for(let m=1;m<=c;m++)try{return await f()}catch(h){if(m===c)throw h;o.requests.retries++;const x=e.retryDelay*m;e.detailedLogging&&console.warn(`AdjustHook: Retry ${m}/${c} in ${x}ms`),await new Promise(L=>setTimeout(L,x))}},A=async()=>{if(s)return;s=!0;const f=performance.now();try{await k(async()=>{o.requests.total++;const c=await fetch(e.endpoint,{method:"GET",cache:"no-cache",headers:{Accept:"application/json","X-AdjustHook-Version":"2.0","X-Request-ID":`${Date.now()}-${Math.random().toString(36).substr(2,9)}`},signal:AbortSignal.timeout(5e3)});if(!c.ok)throw new Error(`HTTP ${c.status}: ${c.statusText}`);const m=await c.json(),h=performance.now()-f;if(m.metrics&&Object.assign(o.server,{memoryUsage:m.metrics.memory||0,cpuUsage:m.metrics.cpu||0,uptime:m.metrics.uptime||0,version:m.metrics.version||null,lastUpdate:Date.now()}),a(h),o.requests.successful++,d(),m&&m.reload){console.info(`AdjustHook: Reload triggered by server (Response: ${h.toFixed(2)}ms, Memory: ${E(m.metrics?.memory||0)})`),e.onReload();return}o.requests.total%e.metricsReportInterval===0&&y()})}catch(c){o.requests.failed++,l(c),(e.detailedLogging||location.hostname==="localhost"||location.hostname==="127.0.0.1")&&e.onError(c)}finally{s=!1,g()}},E=f=>{if(f===0)return"0 B";const c=1024,m=["B","KB","MB","GB"],h=Math.floor(Math.log(f)/Math.log(c));return parseFloat((f/Math.pow(c,h)).toFixed(2))+" "+m[h]};return r=setInterval(A,e.interval),n=setInterval(v,e.healthCheckInterval),console.debug(`AdjustHook: Started monitoring (${e.interval}ms interval, ${e.maxRetries} retries, health check every ${e.healthCheckInterval}ms)`),{stop:()=>{r&&(clearInterval(r),r=null),n&&(clearInterval(n),n=null),console.debug("AdjustHook: Stopped"),e.performanceMonitoring&&(console.log("AdjustHook Final Report:"),y())},getStats:()=>({requests:o.requests.total,errors:o.errors.total,totalTime:o.performance.totalTime,avgTime:o.performance.avgResponseTime,lastCheckTime:o.performance.lastResponseTime}),getMetrics:()=>({...o,summary:{uptime:o.health.uptime,successRate:o.health.successRate,avgResponseTime:o.performance.avgResponseTime,p95ResponseTime:p(95),healthStatus:o.health.isHealthy?"healthy":"degraded"}}),reportMetrics:y,getLastCheckTime:()=>o.performance.lastResponseTime,isHealthy:()=>o.health.isHealthy,getFormattedMetrics:()=>({uptime:b(o.health.uptime),successRate:`${o.health.successRate.toFixed(2)}%`,avgResponse:`${o.performance.avgResponseTime.toFixed(2)}ms`,memoryUsage:E(o.server.memoryUsage),totalRequests:o.requests.total.toLocaleString(),errorRate:`${(o.requests.failed/o.requests.total*100).toFixed(2)}%`})};function b(f){const c=Math.floor(f/1e3),m=Math.floor(c/60),h=Math.floor(m/60);return h>0?`${h}h ${m%60}m`:m>0?`${m}m ${c%60}s`:`${c}s`}},MintUtils={isElement:t=>t instanceof Element,isTextNode:t=>t instanceof Text,isVNode:t=>t&&typeof t=="object"&&"tag"in t,debounce:(t,e)=>{let r;return function(...s){const i=()=>{clearTimeout(r),t(...s)};clearTimeout(r),r=setTimeout(i,e)}},deepEqual:function t(e,r){if(e===r)return!0;if(e==null||r===null||r===void 0)return e===r;if(e.constructor!==r.constructor)return!1;if(Array.isArray(e)){if(e.length!==r.length)return!1;for(let i=0;i<e.length;i++)if(!t(e[i],r[i]))return!1;return!0}const n=Object.keys(e),s=Object.keys(r);if(n.length!==s.length)return!1;for(const i of n)if(!Object.prototype.hasOwnProperty.call(r,i)||!t(e[i],r[i]))return!1;return!0}},PerformanceMonitor={timers:new Map,enabled:!1,start(t){return this.enabled?(this.timers.set(t,performance.now()),this):this},end(t){if(!this.enabled)return 0;const e=this.timers.get(t);if(e){const r=performance.now()-e;return this.timers.delete(t),console.log(`${t}: ${r.toFixed(2)}ms`),r}return 0},measure(t,e){this.start(t);const r=e();return this.end(t),r},async measureAsync(t,e){this.start(t);const r=await e();return this.end(t),r},getStats(){const t={};for(const[e,r]of this.timers)t[e]=performance.now()-r;return t},clear(){this.timers.clear()},enable(){this.enabled=!0,console.log("PerformanceMonitor enabled.")},disable(){this.enabled=!1}},ReloadPerformanceTracker={history:[],maxHistory:25,enabled:!1,recordReload(t,e=0,r=0){if(!this.enabled)return null;const n={timestamp:Date.now(),duration:t,fileCount:e,memoryUsage:r,date:new Date().toISOString()};return this.history.push(n),this.history.length>this.maxHistory&&this.history.shift(),console.log(`Reload recorded: ${t.toFixed(2)}ms, Files: ${e}, Memory: ${r} bytes`),n},getStats(){if(this.history.length===0)return null;const t=this.history.map(s=>s.duration),e=t.reduce((s,i)=>s+i,0)/t.length,r=Math.min(...t),n=Math.max(...t);return{totalReloads:this.history.length,averageTime:e,minTime:r,maxTime:n,lastReload:this.history[this.history.length-1]}},logStats(){if(!this.enabled)return;const t=this.getStats();t&&(console.log("Reload Performance Stats:"),console.log(`   Total reloads: ${t.totalReloads}`),console.log(`   Average time: ${t.averageTime.toFixed(2)}ms`),console.log(`   Min time: ${t.minTime.toFixed(2)}ms`),console.log(`   Max time: ${t.maxTime.toFixed(2)}ms`),console.log(`   Last reload: ${t.lastReload.duration.toFixed(2)}ms`))},clear(){this.history=[]},enable(){this.enabled=!0,console.log("ReloadPerformanceTracker enabled.")},disable(){this.enabled=!1}};
